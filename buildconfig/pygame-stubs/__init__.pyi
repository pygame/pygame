from typing import Callable, Optional, Tuple, Type, Union

# Most useful stuff
from . import constants, surface, rect, color, event, bufferproxy, draw, display, font, image, key, mixer, mouse, time, version

# Advanced stuff
from . import cursors, joystick, mask, sprite, transform, pixelarray, pixelcopy, sndarray, surfarray, math, fastevent

# Other
from . import scrap

# This classes are auto imported with pygame, so I put their declaration here
class Rect(rect.Rect): ...
class Surface(surface.Surface): ...
class Color(color.Color): ...
class PixelArray(pixelarray.PixelArray): ...
class Vector2(math.Vector2): ...
class Vector3(math.Vector3): ...

def init() -> Tuple[int, int]: ...
def quit() -> None: ...
def get_init() -> bool: ...

class error(RuntimeError): ...

def get_error() -> str: ...
def set_error(error_msg: str) -> None: ...
def get_sdl_version() -> Tuple[int, int, int]: ...
def get_sdl_byteorder() -> int: ...
def encode_string(
    obj: Union[str, bytes], encoding: Optional[str] = ..., errors: Optional[str] = ..., etype: Optional[Type[Exception]] = ...,
) -> bytes: ...
def encode_file_path(obj: Union[str, bytes, object], etype: Optional[Type[Exception]] = ...) -> bytes: ...
def register_quit(callable: Callable[[], None]) -> None: ...
def __getattr__(name) -> Any: ...  # don't error on missing stubs

