environment:

  global:
    # SDK v7.0 MSVC Express 2008's SetEnv.cmd script will fail if the
    # /E:ON and /V:ON options are not enabled in the batch script intepreter
    # See: http://stackoverflow.com/a/13751649/163740
    WITH_COMPILER: "cmd /E:ON /V:ON /C .\\buildconfig\\ci\\appveyor\\run_with_compiler.cmd"
    DISTRIBUTIONS: "bdist_wheel"
    PYGAME_DOWNLOAD_PREBUILT: "1"
    PYGAME_USE_PREBUILT: "1"
    SDL_VIDEODRIVER: "dummy"
    SDL_AUDIODRIVER: "disk"
    PYTHONIOENCODING: "UTF-8"
    TWINE_USERNAME: pygameci
    TWINE_PASSWORD:
      secure: FtHM0I+wubit/UWOzHsykHayL06KImKRZQznRUHUfzM=

  matrix:
    # - PYTHON: "pypy.exe"
    #   PYTHON_VERSION: "2.7.13"
    #   PYTHON_ARCH: "32"
    #   PYPY_VERSION: "pypy2-v5.10.0-win32"
    #   PYPY_DOWNLOAD: "powershell buildconfig\\ci\\appveyor\\download_pypy.ps1"

    # - PYTHON: "pypy3.exe"
    #   PYTHON_VERSION: "2.7.13"
    #   PYTHON_ARCH: "32"
    #   PYPY_VERSION: "pypy3-v5.10.1-win32"
    #   PYPY_DOWNLOAD: "powershell buildconfig\\ci\\appveyor\\download_pypy.ps1"

    - PYTHON: "C:\\Python27\\python"
      PYTHONPATH: "C:\\Python27"
      PYTHON_VERSION: "2.7.13"
      PYTHON_ARCH: "32"
      USE_SDL2: "-sdl2"
      USE_ANALYZE: ""

    - PYTHON: "C:\\Python35\\python"
      PYTHONPATH: "C:\\Python35"
      PYTHON_VERSION: "3.5.0"
      PYTHON_ARCH: "32"
      USE_SDL2: "-sdl2"
      USE_ANALYZE: ""

    - PYTHON: "C:\\Python36\\python"
      PYTHONPATH: "C:\\Python36"
      PYTHON_VERSION: "3.6.0"
      PYTHON_ARCH: "32"
      USE_SDL2: "-sdl2"
      USE_ANALYZE: ""

    - PYTHON: "C:\\Python37\\python"
      PYTHONPATH: "C:\\Python37"
      PYTHON_VERSION: "3.7.0"
      PYTHON_ARCH: "32"
      USE_SDL2: "-sdl2"
      USE_ANALYZE: ""

    - PYTHON: "C:\\Python38\\python"
      PYTHONPATH: "C:\\Python38"
      PYTHON_VERSION: "3.8.0"
      PYTHON_ARCH: "32"
      USE_SDL2: "-sdl2"
      USE_ANALYZE: ""

    - PYTHON: "C:\\Python27-x64\\python"
      PYTHONPATH: "C:\\Python27-x64"
      PYTHON_VERSION: "2.7.13"
      PYTHON_ARCH: "64"
      USE_SDL2: "-sdl2"
      USE_ANALYZE: ""

    - PYTHON: "C:\\Python35-x64\\python"
      PYTHONPATH: "C:\\Python35-x64"
      PYTHON_VERSION: "3.5.0"
      PYTHON_ARCH: "64"
      USE_SDL2: "-sdl2"
      USE_ANALYZE: ""

    - PYTHON: "C:\\Python36-x64\\python"
      PYTHONPATH: "C:\\Python36-x64"
      PYTHON_VERSION: "3.6.0"
      PYTHON_ARCH: "64"
      USE_SDL2: "-sdl2"
      USE_ANALYZE: ""

    - PYTHON: "C:\\Python37-x64\\python"
      PYTHONPATH: "C:\\Python37-x64"
      PYTHON_VERSION: "3.7.0"
      PYTHON_ARCH: "64"
      USE_SDL2: "-sdl2"
      USE_ANALYZE: ""

    - PYTHON: "C:\\Python38-x64\\python"
      PYTHONPATH: "C:\\Python38-x64"
      PYTHON_VERSION: "3.8.0"
      PYTHON_ARCH: "64"
      USE_SDL2: "-sdl2"
      USE_ANALYZE: "-enable-msvc-analyze"

#     - PYTHON: "C:\\Python27\\python"
#       PYTHON_VERSION: "2.7.13"
#       PYTHON_ARCH: "32"

#     - PYTHON: "C:\\Python34\\python"
#       PYTHON_VERSION: "3.4.4"
#       PYTHON_ARCH: "32"

#     - PYTHON: "C:\\Python35\\python"
#       PYTHON_VERSION: "3.5.2"
#       PYTHON_ARCH: "32"

#     - PYTHON: "C:\\Python36\\python"
#       PYTHON_VERSION: "3.6.0"
#       PYTHON_ARCH: "32"

#     - PYTHON: "C:\\Python37\\python"
#       PYTHON_VERSION: "3.7.0"
#       PYTHON_ARCH: "32"

#     - PYTHON: "C:\\Python27-x64\\python"
#       PYTHON_VERSION: "2.7.13"
#       PYTHON_ARCH: "64"

#     - PYTHON: "C:\\Python34-x64\\python"
#       PYTHON_VERSION: "3.4.4"
#       PYTHON_ARCH: "64"

#     - PYTHON: "C:\\Python35-x64\\python"
#       PYTHON_VERSION: "3.5.2"
#       PYTHON_ARCH: "64"

#     - PYTHON: "C:\\Python36-x64\\python"
#       PYTHON_VERSION: "3.6.0"
#       PYTHON_ARCH: "64"

#     - PYTHON: "C:\\Python37-x64\\python"
#       PYTHON_VERSION: "3.7.0"
#       PYTHON_ARCH: "64"

init:
  - "ECHO %PYTHON% %PYTHON_VERSION% %PYTHON_ARCH%"

install:
  # install.ps1 only needed for SDL1 stuff.
  # - "powershell buildconfig\\ci\\appveyor\\install.ps1"

  - ps: |
      if (-not (Test-Path $env:PYTHONPATH)) {
        curl -o install_python.ps1 https://gist.githubusercontent.com/illume/aa9236573a4aa1217918861427f0048e/raw/a474093baf038b0af65cda2f27056948f6faae20/install_python.ps1
        .\install_python.ps1
      }
  - "%PYPY_DOWNLOAD%"
  - "set HOME=%APPVEYOR_BUILD_FOLDER%"
  - "set PATH=%PATH%;%APPVEYOR_BUILD_FOLDER%\\%PYPY_VERSION%"
  - "%PYTHON% -m ensurepip"
  - "%PYTHON% -m pip install -U wheel pip twine requests"
  - "%WITH_COMPILER% %PYTHON% -m buildconfig %USE_SDL2%"
  - "%WITH_COMPILER% %PYTHON% setup.py build %USE_ANALYZE%"
  - "%WITH_COMPILER% %PYTHON% setup.py -setuptools %DISTRIBUTIONS%"
  - ps: "ls dist"

  # Install the wheel to test it
  - "%PYTHON% -m pip install --ignore-installed --pre --no-index --find-links dist/ pygame"

# Appveyor's build step is specific to .NET projects, so we build in the
# install step instead.
build: off

# Do not build feature branch with open Pull Requests
skip_branch_with_pr: true

test_script:
  - "mkdir empty_folder"
  - "cd empty_folder"
  - "%PYTHON% -m pygame.tests -v --exclude opengl"

  # Move back to the project folder
  - "cd .."

artifacts:
  - path: 'dist\*.whl'
    name: pypiartifacts

# For uploading releases to github.
# https://www.appveyor.com/docs/deployment/github/
deploy:
  - provider: GitHub
    auth_token:
      secure: lPFSARNb+pYeLKJUzLfSZ9OcSw74R/0vvAjYAkj7OcXOooeHIhIWjNoYDlXZL6hs # your encrypted token from GitHub
    artifact: pypiartifacts
    draft: true
    prerelease: false
    force_update: true
    on:
      # branch: master               # release from master branch only
      APPVEYOR_REPO_TAG: true        # deploy on tag push only


on_success:
  - cmd: "if [%APPVEYOR_REPO_TAG%]==[true] %PYTHON% -m twine upload dist\\*.whl"
