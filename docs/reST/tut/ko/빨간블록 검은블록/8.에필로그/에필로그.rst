====================================
Author: Youngwook Kim (Korean)
====================================

====================================
Contact: rumia0601@gmail.com
====================================

====================================
에필로그
====================================

그러나, 튜토리얼은 여기에서 끝이 난다. 이 튜토리얼은 파이게임의 극소수만을 다웠다. 하지만 걱정하지 마라. 프로그램은 사람이 할 수 있는 가장 창의적인 활동이다. 임마누엘 칸트는 “천재성이란 어떤 대상에 규칙을 부여할 수 있는 능력이다”라고 말했다. 프로그래밍은 규칙을 만들어서 컴퓨터에게 입력시키는 것이다. 규칙이 만들어진다면, 컴퓨터는 규칙 내에서 무엇이든지 할 수 있다. 그러므로, 경우의 수가 매우 커지게 된다.

결론이 무엇인가? 출력이 입력보다 크다는 것이다. 우리는 우리의 지식만으로 지식보다 더 폭넓은 프로그램을 구현할 수 있다. 또는 우리는 새로운 지식을 기존의 지식에 연결시키면서 습득할 수도 있다. 그것이 프로그래밍의 특성이다. 게임도 마찬가지이다. “난수”라는 개념은 모든 게임(이미 구현한 게임도 포함!)에서 대단히 중요한 개념이다. 난수까지 고려되었을 때 경우의 수는 매우 커지게 된다. 만약 하나의 난수가 다른 난수까지 영향을 미치게 된다면, “눈사태”와 같은 효과가 나게 된다. 그것이 게임이 흥미로운 이유이다. “난수”라는 개념은 소설, 음악, 영화 등은 가질 수 없는 게임만의 특성이다. 테트리스를 생각해 보아라. 알렉세이 파지트노프가 테트리스를 위해 얼만큼의 시간을 투자했을까? 이 시간이 35년 넘게 전세계 사람들이 플레이 한 시간보다 클까? 이것이 바로 프로그래밍과 게임이 갖는 두 특성이 완벽히 발휘된 예시이다.

그러므로, 게임을 만드는 것은 눈사태를 일으키는 것과 같다. 이제 아무 게임이나 만들 시간이다! 배우고, 활용하고, 시행 착오를 겪어 보자!

