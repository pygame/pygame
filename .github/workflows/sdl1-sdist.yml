name: SDL1-sdist

# Run CI only when a release is created, on changes to main branch, or any PR 
# to main. Do not run CI on any other branch. Also, skip any non-source changes 
# from running on CI
on:
  release:
    types: [created]
  push:
    branches: main
    paths-ignore:
    - 'docs/**'
    - 'examples/**'
    - '.gitignore'
    - 'README.rst'
    - '.github/workflows/build.yml'
    - '.github/workflows/manylinux.yml'

  pull_request:
    branches: main
    paths-ignore:
    - 'docs/**'
    - 'examples/**'
    - '.gitignore'
    - 'README.rst'
    - '.github/workflows/build.yml'
    - '.github/workflows/manylinux.yml'

jobs:
  build-sdl1-sdist:
    runs-on: ubuntu-18.04

    steps:
    - uses: actions/checkout@v2.3.4

    - name: Install deps
      run: |
        sudo apt-get update --fix-missing
        sudo apt-get upgrade
        sudo apt-get install python3-dev python3-setuptools python3-numpy python3-opengl libsdl-image1.2-dev libsdl-mixer1.2-dev libsdl-ttf2.0-dev libsmpeg-dev libsdl1.2-dev libportmidi-dev libswscale-dev libavformat-dev libavcodec-dev libtiff5-dev libx11-6 libx11-dev fluid-soundfont-gm timgm6mb-soundfont xfonts-base xfonts-100dpi xfonts-75dpi xfonts-cyrillic fontconfig fonts-freefont-ttf libfreetype6-dev
        python3 -m pip install -U pip
        python3 -m pip install -U wheel requests

    - name: Make sdist
      run: |
        python3 setup.py -config -auto -sdl1
        python3 setup.py sdist

    - name: Extract sdist for testing
      run: |
        import tarfile
        import os
        import glob
        
        for i in glob.iglob("dist/pygame-*.tar.gz"):
          with tarfile.open(i, 'r:gz') as tar:
            tar.extractall()
          break

        for dir in os.listdir(os.getcwd()):
          if dir.startswith("pygame-"):
            os.rename(dir, "pygame-sdist")
            break
      shell: python

    - name: Install SDL1 pygame from sdist
      run: |
        python3 setup.py -config -auto -sdl1
        python3 setup.py build -j4 install --user
      working-directory: ./pygame-sdist

    - name: Run tests
      env:
        SDL_VIDEODRIVER: "dummy"
        SDL_AUDIODRIVER: "disk"
      run: python3 -m pygame.tests -v --exclude opengl,timing --time_out 300

    # We upload the generated files under github actions assets
    - name: Upload sdist
      uses: actions/upload-artifact@v2
      with:
        name: pygame-sdist
        path: dist/*.tar.gz

#   - name: Upload binaries to Github Releases
#     if: github.event_name == 'release'
#     uses: svenstaro/upload-release-action@v2
#     with:
#       repo_token: ${{ secrets.GITHUB_TOKEN }}
#       file: dist/*.tar.gz
#       tag: ${{ github.ref }}
#
#   - name: Upload binaries to PyPI
#     if: github.event_name == 'release'
#     env:
#      TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
#      TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
#     run: |
#       python3 -m pip install twine
#       twine upload dist/*.tar.gz
