name: MacOS

# Run CI only when a release is created, on changes to main branch, or any PR 
# to main. Do not run CI on any other branch. Also, skip any non-source changes 
# from running on CI
on:
  release:
    types: [created]
  push:
    branches: main
    paths-ignore:
    - 'docs/**'
    - 'examples/**'
    - '.gitignore'
    - 'README.rst'
    - '.github/workflows/linux.yml'
    - '.github/workflows/windows.yml'
    - '.github/workflows/sdl1-sdist.yml'
  pull_request:
    branches: main
    paths-ignore:
    - 'docs/**'
    - 'examples/**'
    - '.gitignore'
    - 'README.rst'
    - '.github/workflows/manylinux.yml'
    - '.github/workflows/windows.yml'
    - '.github/workflows/sdl1-sdist.yml'

jobs:
  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        # For the future, migrate windows and linux to CIBuildWheel
        # os: [ubuntu-latest, windows-latest, macos-10.15]
        os: [macos-10.15]

        # seperate into matrix for concurrency. cp36 is the least CIBuildWheel
        # supports
        pyver: ['cp36', 'cp37', 'cp38', 'cp39', 'cp310', 'pp37']

    steps:
      - uses: actions/checkout@v2

      - name: Build wheels
        uses: pypa/cibuildwheel@v2.1.1

        env:
          SDL_VIDEODRIVER: "dummy"
          SDL_AUDIODRIVER: "disk"

          CIBW_BUILD: ${{ matrix.pyver }}-*

          # Build universal2 and arm64 wheels on an Intel runner.
          # Note that the `arm64` wheel and the `arm64` part of the `universal2`
          # wheel cannot be tested in this configuration.
          # 
          # uncomment this part when we actually have arm64 working
          # CIBW_ARCHS_MACOS: "x86_64 universal2 arm64"

          # Install some dependencies
          CIBW_BEFORE_BUILD: export MACOSX_DEPLOYMENT_TARGET=10.13 && pip install wheel requests numpy && brew install --build-from-source sdl2 sdl2_image sdl2_mixer sdl2_net sdl2_ttf libpng zlib freetype portmidi

          CIBW_TEST_COMMAND: python -m pygame.tests -v --exclude opengl,timing --time_out 300

      - uses: actions/upload-artifact@v2
        with:
          name: pygame-mac-wheels
          path: ./wheelhouse/*.whl

#   - name: Upload binaries to Github Releases
#     if: github.event_name == 'release'
#     uses: svenstaro/upload-release-action@v2
#     with:
#       repo_token: ${{ secrets.GITHUB_TOKEN }}
#       file: dist/*.whl
#       tag: ${{ github.ref }}
#
#   - name: Upload binaries to PyPI
#     if: github.event_name == 'release'
#     env:
#      TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
#      TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
#     run: |
#       python3 -m pip install twine
#       twine upload dist/*.whl